/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package helidon.sub.project;

import javax.enterprise.inject.spi.CDI;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.LogManager;

import io.helidon.microprofile.server.Server;


public class App {

    public App() { }

    public static void main(String[] args) throws IOException {
        // load logging configuration
        setupLogging();

        // start the server
        Server server = startServer();

        System.out.println("http://localhost:" + server.port() + "/");
    }


    /**
     * Start the server.
     * @return the created {@link Server} instance
     */
    static Server startServer() {
        // Server will automatically pick up configuration from
        // microprofile-config.properties
        // and Application classes annotated as @ApplicationScoped
        return Server.create().start();
    }


    /**
     * Configure logging from logging.properties file.
     */
    private static void setupLogging() throws IOException {
        try (InputStream is = App.class.getResourceAsStream("/logging.properties")) {
            LogManager.getLogManager().readConfiguration(is);
        }
    }
}
